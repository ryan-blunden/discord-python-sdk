"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .applicationcommandattachmentoption import (
    ApplicationCommandAttachmentOption,
    ApplicationCommandAttachmentOptionTypedDict,
)
from .applicationcommandbooleanoption import (
    ApplicationCommandBooleanOption,
    ApplicationCommandBooleanOptionTypedDict,
)
from .applicationcommandchanneloption import (
    ApplicationCommandChannelOption,
    ApplicationCommandChannelOptionTypedDict,
)
from .applicationcommandintegeroption import (
    ApplicationCommandIntegerOption,
    ApplicationCommandIntegerOptionTypedDict,
)
from .applicationcommandmentionableoption import (
    ApplicationCommandMentionableOption,
    ApplicationCommandMentionableOptionTypedDict,
)
from .applicationcommandnumberoption import (
    ApplicationCommandNumberOption,
    ApplicationCommandNumberOptionTypedDict,
)
from .applicationcommandroleoption import (
    ApplicationCommandRoleOption,
    ApplicationCommandRoleOptionTypedDict,
)
from .applicationcommandstringoption import (
    ApplicationCommandStringOption,
    ApplicationCommandStringOptionTypedDict,
)
from .applicationcommandsubcommandgroupoption import (
    ApplicationCommandSubcommandGroupOption,
    ApplicationCommandSubcommandGroupOptionTypedDict,
)
from .applicationcommandsubcommandoption import (
    ApplicationCommandSubcommandOption,
    ApplicationCommandSubcommandOptionTypedDict,
)
from .applicationcommanduseroption import (
    ApplicationCommandUserOption,
    ApplicationCommandUserOptionTypedDict,
)
from discord_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from discord_sdk.utils import validate_const
import pydantic
from pydantic import model_serializer
from pydantic.functional_validators import AfterValidator
from typing import Dict, List, Literal, Union
from typing_extensions import Annotated, NotRequired, TypedDict


ApplicationCommandCreateRequestOptionsTypedDict = Union[
    ApplicationCommandAttachmentOptionTypedDict,
    ApplicationCommandBooleanOptionTypedDict,
    ApplicationCommandMentionableOptionTypedDict,
    ApplicationCommandRoleOptionTypedDict,
    ApplicationCommandUserOptionTypedDict,
    ApplicationCommandChannelOptionTypedDict,
    ApplicationCommandSubcommandGroupOptionTypedDict,
    ApplicationCommandSubcommandOptionTypedDict,
    ApplicationCommandIntegerOptionTypedDict,
    ApplicationCommandNumberOptionTypedDict,
    ApplicationCommandStringOptionTypedDict,
]


ApplicationCommandCreateRequestOptions = Union[
    ApplicationCommandAttachmentOption,
    ApplicationCommandBooleanOption,
    ApplicationCommandMentionableOption,
    ApplicationCommandRoleOption,
    ApplicationCommandUserOption,
    ApplicationCommandChannelOption,
    ApplicationCommandSubcommandGroupOption,
    ApplicationCommandSubcommandOption,
    ApplicationCommandIntegerOption,
    ApplicationCommandNumberOption,
    ApplicationCommandStringOption,
]


class ApplicationCommandCreateRequestTypedDict(TypedDict):
    name: str
    name_localizations: NotRequired[Nullable[Dict[str, str]]]
    description: NotRequired[Nullable[str]]
    description_localizations: NotRequired[Nullable[Dict[str, str]]]
    options: NotRequired[
        Nullable[List[ApplicationCommandCreateRequestOptionsTypedDict]]
    ]
    default_member_permissions: NotRequired[Nullable[int]]
    dm_permission: NotRequired[Nullable[bool]]
    contexts: NotRequired[Nullable[List[int]]]
    integration_types: NotRequired[Nullable[List[int]]]
    handler: NotRequired[Nullable[int]]
    type: Nullable[Literal[1]]


class ApplicationCommandCreateRequest(BaseModel):
    name: str

    name_localizations: OptionalNullable[Dict[str, str]] = UNSET

    description: OptionalNullable[str] = UNSET

    description_localizations: OptionalNullable[Dict[str, str]] = UNSET

    options: OptionalNullable[List[ApplicationCommandCreateRequestOptions]] = UNSET

    default_member_permissions: OptionalNullable[int] = UNSET

    dm_permission: OptionalNullable[bool] = UNSET

    contexts: OptionalNullable[List[int]] = UNSET

    integration_types: OptionalNullable[List[int]] = UNSET

    handler: OptionalNullable[int] = UNSET

    TYPE: Annotated[
        Annotated[OptionalNullable[Literal[1]], AfterValidator(validate_const(1))],
        pydantic.Field(alias="type"),
    ] = 1

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "name_localizations",
            "description",
            "description_localizations",
            "options",
            "default_member_permissions",
            "dm_permission",
            "contexts",
            "integration_types",
            "handler",
            "type",
        ]
        nullable_fields = [
            "name_localizations",
            "description",
            "description_localizations",
            "options",
            "default_member_permissions",
            "dm_permission",
            "contexts",
            "integration_types",
            "handler",
            "type",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
