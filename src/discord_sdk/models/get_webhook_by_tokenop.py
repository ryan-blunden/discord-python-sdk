"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .applicationincomingwebhookresponse import (
    ApplicationIncomingWebhookResponse,
    ApplicationIncomingWebhookResponseTypedDict,
)
from .channelfollowerwebhookresponse import (
    ChannelFollowerWebhookResponse,
    ChannelFollowerWebhookResponseTypedDict,
)
from .guildincomingwebhookresponse import (
    GuildIncomingWebhookResponse,
    GuildIncomingWebhookResponseTypedDict,
)
from discord_sdk.types import BaseModel
from discord_sdk.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypedDict


class GetWebhookByTokenSecurityTypedDict(TypedDict):
    bot_token: NotRequired[str]


class GetWebhookByTokenSecurity(BaseModel):
    bot_token: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ] = None


class GetWebhookByTokenRequestTypedDict(TypedDict):
    webhook_id: str
    webhook_token: str


class GetWebhookByTokenRequest(BaseModel):
    webhook_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    webhook_token: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


GetWebhookByTokenResponseBodyTypedDict = Union[
    ApplicationIncomingWebhookResponseTypedDict,
    ChannelFollowerWebhookResponseTypedDict,
    GuildIncomingWebhookResponseTypedDict,
]
r"""200 response for get_webhook_by_token"""


GetWebhookByTokenResponseBody = Union[
    ApplicationIncomingWebhookResponse,
    ChannelFollowerWebhookResponse,
    GuildIncomingWebhookResponse,
]
r"""200 response for get_webhook_by_token"""
