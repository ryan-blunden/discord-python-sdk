"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from discord_sdk.types import BaseModel
from discord_sdk.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    SecurityMetadata,
    validate_const,
)
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetGuildWidgetPngSecurityTypedDict(TypedDict):
    bot_token: NotRequired[str]


class GetGuildWidgetPngSecurity(BaseModel):
    bot_token: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ] = None


class GetGuildWidgetPngRequestTypedDict(TypedDict):
    guild_id: str
    style: Literal["shield"]


class GetGuildWidgetPngRequest(BaseModel):
    guild_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    STYLE: Annotated[
        Annotated[
            Optional[Literal["shield"]], AfterValidator(validate_const("shield"))
        ],
        pydantic.Field(alias="style"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "shield"
