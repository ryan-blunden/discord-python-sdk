"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .guildchannelresponse import GuildChannelResponse, GuildChannelResponseTypedDict
from .privatechannelresponse import (
    PrivateChannelResponse,
    PrivateChannelResponseTypedDict,
)
from .privategroupchannelresponse import (
    PrivateGroupChannelResponse,
    PrivateGroupChannelResponseTypedDict,
)
from .threadresponse import ThreadResponse, ThreadResponseTypedDict
from discord_sdk.types import BaseModel
from discord_sdk.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypedDict


class ListGuildChannelsSecurityTypedDict(TypedDict):
    bot_token: NotRequired[str]


class ListGuildChannelsSecurity(BaseModel):
    bot_token: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ] = None


class ListGuildChannelsRequestTypedDict(TypedDict):
    guild_id: str


class ListGuildChannelsRequest(BaseModel):
    guild_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


ListGuildChannelsResponseBodyTypedDict = Union[
    PrivateChannelResponseTypedDict,
    PrivateGroupChannelResponseTypedDict,
    ThreadResponseTypedDict,
    GuildChannelResponseTypedDict,
]


ListGuildChannelsResponseBody = Union[
    PrivateChannelResponse,
    PrivateGroupChannelResponse,
    ThreadResponse,
    GuildChannelResponse,
]
