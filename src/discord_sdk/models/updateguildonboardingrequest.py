"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .updateonboardingpromptrequest import (
    UpdateOnboardingPromptRequest,
    UpdateOnboardingPromptRequestTypedDict,
)
from discord_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from discord_sdk.utils import validate_const
import pydantic
from pydantic import model_serializer
from pydantic.functional_validators import AfterValidator
from typing import List, Literal
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateGuildOnboardingRequestTypedDict(TypedDict):
    prompts: NotRequired[Nullable[List[UpdateOnboardingPromptRequestTypedDict]]]
    enabled: NotRequired[Nullable[bool]]
    default_channel_ids: NotRequired[Nullable[List[str]]]
    mode: Nullable[Literal[0]]


class UpdateGuildOnboardingRequest(BaseModel):
    prompts: OptionalNullable[List[UpdateOnboardingPromptRequest]] = UNSET

    enabled: OptionalNullable[bool] = UNSET

    default_channel_ids: OptionalNullable[List[str]] = UNSET

    MODE: Annotated[
        Annotated[OptionalNullable[Literal[0]], AfterValidator(validate_const(0))],
        pydantic.Field(alias="mode"),
    ] = 0

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["prompts", "enabled", "default_channel_ids", "mode"]
        nullable_fields = ["prompts", "enabled", "default_channel_ids", "mode"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
